{"mappings":"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","sources":["<anon>","src/app.js","src/search.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire8370\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire8370\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"jQQXv\", function(module, exports) {\n\n$parcel$export(module.exports, \"toggleOverviewText\", () => $e73bf42412feb220$export$40a84a0cda5221f3);\n\nvar $euFvE = parcelRequire(\"euFvE\");\nconst $e73bf42412feb220$var$movieListContainer = document.querySelector(\"#movieList-container\");\nconst $e73bf42412feb220$var$api_key = \"db85a489a7f0131f0f43f57e6a905f19\";\n(0, $euFvE.searchEventListners)();\n(0, $euFvE.renderSearchList)();\n//fetching movie list from The Movie Database API\nconst $e73bf42412feb220$var$fetchMovieList = async ()=>{\n    const response = await fetch(`https://api.themoviedb.org/3/movie/popular?language=en-US&page=1&api_key=${$e73bf42412feb220$var$api_key}`);\n    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n    const data = await response.json();\n    return data.results;\n};\n//Rendering movie list to the DOM\nconst $e73bf42412feb220$var$renderMovieList = (movies)=>{\n    movies.forEach((movie)=>{\n        const movieElement = document.createElement(\"div\");\n        movieElement.className = \"max-auto  text-white rounded-lg shadow-md\";\n        const currentFavourites = JSON.parse(localStorage.getItem(\"favouriteMovie\")) || [];\n        const isFavourite = currentFavourites.some((m)=>m.id === movie.id);\n        //overview text\n        const shortOverview = movie.overview.length > 100 ? movie.overview.slice(0, 100) + \"...\" : movie.overview;\n        movieElement.innerHTML = `\n      <img src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"${movie.title} poster\" \n        class=\"border-gray-800 rounded-lg border-4 hover:border-white\n        transition-transform duration-300 ease-in-out hover:scale-105 hover:shadow-lg mb-2\"/>\n      <div class=\"p-2 flex justify-between\">\n        <h1 class=\"text-2xl font-bold mb-2 w-5/6\">${movie.title}</h1>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" \n             fill=\"${isFavourite ? \"red\" : \"none\"}\" \n             viewBox=\"0 0 24 24\" stroke-width=\"1.5\" \n             stroke=\"currentColor\" \n             class=\"w-5 h-5 cursor-pointer fav-icon hover:scale-110 transition-transform w-1/6 mt-1\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" \n                d=\"M21.435 4.582a5.373 5.373 0 00-7.606 0L12 6.41l-1.829-1.828a5.373 5.373 0 00-7.606 7.606l1.828 1.828L12 21.435l7.607-7.606 1.828-1.828a5.373 5.373 0 000-7.606z\" />\n        </svg>\n          <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          id=\"notes-icon\"\n          class=\"ml-2 w-5 h-5 text-center cursor-pointer mt-1\"\n          width=\"24\"\n          height=\"24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          class=\"feather feather-file-text\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"\n          />\n          <polyline points=\"14 2 14 8 20 8\" />\n          <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\" />\n          <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\" />\n          <line x1=\"10\" y1=\"9\" x2=\"8\" y2=\"9\" />\n        </svg>\n      </div>\n      <p class=\"text-gray-300\">\n        Info: <span class=\"short-text\">${shortOverview}</span>\n        <span class=\"full-text hidden\">${movie.overview}</span>\n        <button class=\"toggle-btn text-blue-400 underline ml-1\">Read more</button>\n      </p>\n    `;\n        $e73bf42412feb220$var$movieListContainer.appendChild(movieElement);\n        $e73bf42412feb220$export$40a84a0cda5221f3(movieElement);\n        $e73bf42412feb220$var$saveMovieToLocalStorage(movie, movieElement);\n        $e73bf42412feb220$var$saveNotesToLocalStorage(movie, movieElement);\n    });\n};\n// Add toggle functionality\nconst $e73bf42412feb220$export$40a84a0cda5221f3 = (movieElement)=>{\n    const toggleBtn = movieElement.querySelector(\".toggle-btn\");\n    const shortText = movieElement.querySelector(\".short-text\");\n    const fullText = movieElement.querySelector(\".full-text\");\n    toggleBtn.addEventListener(\"click\", ()=>{\n        if (fullText.classList.contains(\"hidden\")) {\n            shortText.classList.add(\"hidden\");\n            fullText.classList.remove(\"hidden\");\n            toggleBtn.textContent = \"Read less\";\n        } else {\n            shortText.classList.remove(\"hidden\");\n            fullText.classList.add(\"hidden\");\n            toggleBtn.textContent = \"Read more\";\n        }\n    });\n};\n// Save movie to local storage\nconst $e73bf42412feb220$var$saveMovieToLocalStorage = (movie, movieElement)=>{\n    const favIcon = movieElement.querySelector(\".fav-icon\");\n    favIcon.addEventListener(\"click\", ()=>{\n        let currentFavourites = JSON.parse(localStorage.getItem(\"favouriteMovie\")) || [];\n        const exists = currentFavourites.some((m)=>m.id === movie.id);\n        if (!exists) {\n            currentFavourites.push({\n                ...movie,\n                count: 1\n            });\n            favIcon.setAttribute(\"fill\", \"red\");\n            console.log(`${movie.title} added to favourites.`);\n        } else {\n            currentFavourites = currentFavourites.filter((m)=>m.id !== movie.id);\n            favIcon.setAttribute(\"fill\", \"none\");\n            console.log(`${movie.title} removed from favourites.`);\n        }\n        localStorage.setItem(\"favouriteMovie\", JSON.stringify(currentFavourites));\n    });\n};\n// Save Notes to local storage\nconst $e73bf42412feb220$var$saveNotesToLocalStorage = (movie, movieElement)=>{\n    const notesIcon = movieElement.querySelector(\"#notes-icon\");\n    notesIcon.addEventListener(\"click\", ()=>{\n        const dialogOverlay = document.querySelector(\"#dialogOverlay\");\n        const noteText = document.querySelector(\"#noteText\");\n        const saveBtn = document.querySelector(\"#saveBtn\");\n        const closeBtn = document.querySelector(\"#closeBtn\");\n        const storageKey = \"Notes\";\n        const savedNotes = JSON.parse(localStorage.getItem(storageKey)) || [];\n        const existingNote = savedNotes.find((n)=>n.id === movie.id);\n        noteText.value = existingNote ? existingNote.content : \"\";\n        dialogOverlay.classList.remove(\"hidden\");\n        saveBtn.onclick = ()=>{\n            const filtered = savedNotes.filter((n)=>n.id !== movie.id);\n            if (noteText.value.trim()) filtered.push({\n                id: movie.id,\n                content: noteText.value.trim()\n            });\n            localStorage.setItem(storageKey, JSON.stringify(filtered));\n            dialogOverlay.classList.add(\"hidden\");\n        };\n        closeBtn.onclick = ()=>dialogOverlay.classList.add(\"hidden\");\n        dialogOverlay.onclick = (e)=>{\n            if (e.target === dialogOverlay) dialogOverlay.classList.add(\"hidden\");\n        };\n    });\n};\n// Fetching and rendering the movie list\nconst $e73bf42412feb220$var$fetchAndRenderMovieList = async ()=>{\n    try {\n        const movies = await $e73bf42412feb220$var$fetchMovieList();\n        console.log(\"Fetched movies:\", movies);\n        $e73bf42412feb220$var$renderMovieList(movies);\n    } catch (error) {\n        console.error(\"Error fetching movie list:\", error);\n        return;\n    }\n};\n$e73bf42412feb220$var$fetchAndRenderMovieList();\n\n});\nparcelRegister(\"euFvE\", function(module, exports) {\n\n$parcel$export(module.exports, \"searchEventListners\", () => $a8d410f20eeaeb6d$export$fc720ab599c28b2f);\n$parcel$export(module.exports, \"renderSearchList\", () => $a8d410f20eeaeb6d$export$e3eeb24f85ee68d);\nconst $a8d410f20eeaeb6d$var$searchBtn = document.getElementById(\"searchBtn\");\nconst $a8d410f20eeaeb6d$var$searchBox = document.getElementById(\"searchInput\");\nconst $a8d410f20eeaeb6d$var$suggestions = document.getElementById(\"suggestions\");\nconst $a8d410f20eeaeb6d$var$api_key = \"db85a489a7f0131f0f43f57e6a905f19\";\nconst $a8d410f20eeaeb6d$export$fc720ab599c28b2f = ()=>{\n    $a8d410f20eeaeb6d$var$searchBtn.addEventListener(\"click\", (e)=>{\n        e.stopPropagation(); // Prevent closing immediately\n        $a8d410f20eeaeb6d$var$searchBox.classList.remove(\"w-0\", \"opacity-0\", \"mx-0\");\n        $a8d410f20eeaeb6d$var$searchBox.classList.add(\"w-64\", \"opacity-100\", \"mx-2\");\n        $a8d410f20eeaeb6d$var$searchBox.focus();\n    });\n    document.addEventListener(\"click\", (e)=>{\n        if (!searchWrapper.contains(e.target)) {\n            $a8d410f20eeaeb6d$var$searchBox.classList.remove(\"w-64\", \"opacity-100\", \"mx-2\");\n            $a8d410f20eeaeb6d$var$searchBox.classList.add(\"w-0\", \"opacity-0\", \"mx-0\");\n            $a8d410f20eeaeb6d$var$searchBox.blur();\n        }\n    });\n};\nconst $a8d410f20eeaeb6d$export$e3eeb24f85ee68d = ()=>{\n    //fetching Search list from The Movie Database API\n    const fetchSearchList = async (queryP)=>{\n        const response = await fetch(`https://api.themoviedb.org/3/search/movie?query=${queryP}&\n    include_adult=false&language=en-US&page=1&api_key=${$a8d410f20eeaeb6d$var$api_key}`);\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        const data = await response.json();\n        return data.results;\n    };\n    //Rendering Search list to the DOM\n    const renderSearchList = (movies, query)=>{\n        const filtered = movies.filter((movie)=>movie.title.toLowerCase().includes(query));\n        filtered.forEach((movie)=>{\n            const div = document.createElement(\"div\");\n            div.className = \"flex flex-row px-3 py-2 hover:bg-gray-700 cursor-pointer\";\n            div.innerHTML = `\n     <img\n                    src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\"\n                    alt=\"demo\"\n                    class=\"w-[40px] h-[60px]\"\n                  />\n                  <div class=\"flex flex-col justify-center\">\n                    <div class=\"ml-2 text-[0.8rem]\">${movie.title}</div>\n                  </div>`;\n            div.addEventListener(\"click\", ()=>{\n                $a8d410f20eeaeb6d$var$searchBox.value = movie.title;\n                $a8d410f20eeaeb6d$var$suggestions.classList.add(\"hidden\");\n            });\n            $a8d410f20eeaeb6d$var$suggestions.appendChild(div);\n            $a8d410f20eeaeb6d$var$suggestions.classList.toggle(\"hidden\", filtered.length === 0);\n        });\n    };\n    // Fetching and rendering the Search list\n    const fetchAndRenderSearchList = async (query)=>{\n        try {\n            const movies = await fetchSearchList(query);\n            console.log(\"Fetched movies:\", movies);\n            renderSearchList(movies, query);\n        } catch (error) {\n            console.error(\"Error fetching movie list:\", error);\n            return;\n        }\n    };\n    $a8d410f20eeaeb6d$var$searchBox.addEventListener(\"input\", ()=>{\n        const query = $a8d410f20eeaeb6d$var$searchBox.value.toLowerCase();\n        $a8d410f20eeaeb6d$var$suggestions.innerHTML = \"\";\n        if (query) fetchAndRenderSearchList(query);\n        else $a8d410f20eeaeb6d$var$suggestions.classList.add(\"hidden\");\n    });\n    document.addEventListener(\"click\", (event)=>{\n        if (!event.target.closest(\"#searchBox\") && !event.target.closest(\"#suggestions\")) $a8d410f20eeaeb6d$var$suggestions.classList.add(\"hidden\");\n    });\n};\n\n});\n\n\n\nparcelRequire(\"jQQXv\");\n\n//# sourceMappingURL=movie-diary-copy.2207ed5d.js.map\n","import { renderSearchList, searchEventListners } from \"./search.js\";\r\n\r\nconst movieListContainer = document.querySelector(\"#movieList-container\");\r\nconst api_key = \"db85a489a7f0131f0f43f57e6a905f19\";\r\n\r\nsearchEventListners();\r\nrenderSearchList();\r\n\r\n//fetching movie list from The Movie Database API\r\nconst fetchMovieList = async () => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/popular?language=en-US&page=1&api_key=${api_key}`\r\n  );\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! status: ${response.status}`);\r\n  }\r\n  const data = await response.json();\r\n  return data.results;\r\n};\r\n\r\n//Rendering movie list to the DOM\r\nconst renderMovieList = (movies) => {\r\n  movies.forEach((movie) => {\r\n    const movieElement = document.createElement(\"div\");\r\n\r\n    movieElement.className = \"max-auto  text-white rounded-lg shadow-md\";\r\n\r\n    const currentFavourites =\r\n      JSON.parse(localStorage.getItem(\"favouriteMovie\")) || [];\r\n    const isFavourite = currentFavourites.some((m) => m.id === movie.id);\r\n\r\n    //overview text\r\n    const shortOverview =\r\n      movie.overview.length > 100\r\n        ? movie.overview.slice(0, 100) + \"...\"\r\n        : movie.overview;\r\n\r\n    movieElement.innerHTML = `\r\n      <img src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"${\r\n      movie.title\r\n    } poster\" \r\n        class=\"border-gray-800 rounded-lg border-4 hover:border-white\r\n        transition-transform duration-300 ease-in-out hover:scale-105 hover:shadow-lg mb-2\"/>\r\n      <div class=\"p-2 flex justify-between\">\r\n        <h1 class=\"text-2xl font-bold mb-2 w-5/6\">${movie.title}</h1>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" \r\n             fill=\"${isFavourite ? \"red\" : \"none\"}\" \r\n             viewBox=\"0 0 24 24\" stroke-width=\"1.5\" \r\n             stroke=\"currentColor\" \r\n             class=\"w-5 h-5 cursor-pointer fav-icon hover:scale-110 transition-transform w-1/6 mt-1\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" \r\n                d=\"M21.435 4.582a5.373 5.373 0 00-7.606 0L12 6.41l-1.829-1.828a5.373 5.373 0 00-7.606 7.606l1.828 1.828L12 21.435l7.607-7.606 1.828-1.828a5.373 5.373 0 000-7.606z\" />\r\n        </svg>\r\n          <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          id=\"notes-icon\"\r\n          class=\"ml-2 w-5 h-5 text-center cursor-pointer mt-1\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          stroke-width=\"2\"\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          class=\"feather feather-file-text\"\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path\r\n            d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"\r\n          />\r\n          <polyline points=\"14 2 14 8 20 8\" />\r\n          <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\" />\r\n          <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\" />\r\n          <line x1=\"10\" y1=\"9\" x2=\"8\" y2=\"9\" />\r\n        </svg>\r\n      </div>\r\n      <p class=\"text-gray-300\">\r\n        Info: <span class=\"short-text\">${shortOverview}</span>\r\n        <span class=\"full-text hidden\">${movie.overview}</span>\r\n        <button class=\"toggle-btn text-blue-400 underline ml-1\">Read more</button>\r\n      </p>\r\n    `;\r\n    movieListContainer.appendChild(movieElement);\r\n    toggleOverviewText(movieElement);\r\n    saveMovieToLocalStorage(movie, movieElement);\r\n    saveNotesToLocalStorage(movie, movieElement);\r\n  });\r\n};\r\n\r\n// Add toggle functionality\r\nconst toggleOverviewText = (movieElement) => {\r\n  const toggleBtn = movieElement.querySelector(\".toggle-btn\");\r\n  const shortText = movieElement.querySelector(\".short-text\");\r\n  const fullText = movieElement.querySelector(\".full-text\");\r\n\r\n  toggleBtn.addEventListener(\"click\", () => {\r\n    if (fullText.classList.contains(\"hidden\")) {\r\n      shortText.classList.add(\"hidden\");\r\n      fullText.classList.remove(\"hidden\");\r\n      toggleBtn.textContent = \"Read less\";\r\n    } else {\r\n      shortText.classList.remove(\"hidden\");\r\n      fullText.classList.add(\"hidden\");\r\n      toggleBtn.textContent = \"Read more\";\r\n    }\r\n  });\r\n};\r\n\r\n// Save movie to local storage\r\nconst saveMovieToLocalStorage = (movie, movieElement) => {\r\n  const favIcon = movieElement.querySelector(\".fav-icon\");\r\n\r\n  favIcon.addEventListener(\"click\", () => {\r\n    let currentFavourites =\r\n      JSON.parse(localStorage.getItem(\"favouriteMovie\")) || [];\r\n\r\n    const exists = currentFavourites.some((m) => m.id === movie.id);\r\n\r\n    if (!exists) {\r\n      currentFavourites.push({ ...movie, count: 1 });\r\n      favIcon.setAttribute(\"fill\", \"red\");\r\n      console.log(`${movie.title} added to favourites.`);\r\n    } else {\r\n      currentFavourites = currentFavourites.filter((m) => m.id !== movie.id);\r\n      favIcon.setAttribute(\"fill\", \"none\");\r\n      console.log(`${movie.title} removed from favourites.`);\r\n    }\r\n\r\n    localStorage.setItem(\"favouriteMovie\", JSON.stringify(currentFavourites));\r\n  });\r\n};\r\n\r\n// Save Notes to local storage\r\nconst saveNotesToLocalStorage = (movie, movieElement) => {\r\n  const notesIcon = movieElement.querySelector(\"#notes-icon\");\r\n\r\n  notesIcon.addEventListener(\"click\", () => {\r\n    const dialogOverlay = document.querySelector(\"#dialogOverlay\");\r\n    const noteText = document.querySelector(\"#noteText\");\r\n    const saveBtn = document.querySelector(\"#saveBtn\");\r\n    const closeBtn = document.querySelector(\"#closeBtn\");\r\n    const storageKey = \"Notes\";\r\n\r\n    const savedNotes = JSON.parse(localStorage.getItem(storageKey)) || [];\r\n\r\n    const existingNote = savedNotes.find((n) => n.id === movie.id);\r\n    noteText.value = existingNote ? existingNote.content : \"\";\r\n\r\n    dialogOverlay.classList.remove(\"hidden\");\r\n\r\n    saveBtn.onclick = () => {\r\n      const filtered = savedNotes.filter((n) => n.id !== movie.id);\r\n\r\n      if (noteText.value.trim()) {\r\n        filtered.push({\r\n          id: movie.id,\r\n          content: noteText.value.trim(),\r\n        });\r\n      }\r\n\r\n      localStorage.setItem(storageKey, JSON.stringify(filtered));\r\n\r\n      dialogOverlay.classList.add(\"hidden\");\r\n    };\r\n\r\n    closeBtn.onclick = () => dialogOverlay.classList.add(\"hidden\");\r\n    dialogOverlay.onclick = (e) => {\r\n      if (e.target === dialogOverlay) {\r\n        dialogOverlay.classList.add(\"hidden\");\r\n      }\r\n    };\r\n  });\r\n};\r\n\r\n// Fetching and rendering the movie list\r\nconst fetchAndRenderMovieList = async () => {\r\n  try {\r\n    const movies = await fetchMovieList();\r\n    console.log(\"Fetched movies:\", movies);\r\n    renderMovieList(movies);\r\n  } catch (error) {\r\n    console.error(\"Error fetching movie list:\", error);\r\n    return;\r\n  }\r\n};\r\nfetchAndRenderMovieList();\r\n\r\nexport { toggleOverviewText };\r\n","const searchBtn = document.getElementById(\"searchBtn\");\r\nconst searchBox = document.getElementById(\"searchInput\");\r\nconst suggestions = document.getElementById(\"suggestions\");\r\nconst api_key = \"db85a489a7f0131f0f43f57e6a905f19\";\r\n\r\nconst searchEventListners = () => {\r\n  searchBtn.addEventListener(\"click\", (e) => {\r\n    e.stopPropagation(); // Prevent closing immediately\r\n    searchBox.classList.remove(\"w-0\", \"opacity-0\", \"mx-0\");\r\n    searchBox.classList.add(\"w-64\", \"opacity-100\", \"mx-2\");\r\n    searchBox.focus();\r\n  });\r\n\r\n  document.addEventListener(\"click\", (e) => {\r\n    if (!searchWrapper.contains(e.target)) {\r\n      searchBox.classList.remove(\"w-64\", \"opacity-100\", \"mx-2\");\r\n      searchBox.classList.add(\"w-0\", \"opacity-0\", \"mx-0\");\r\n      searchBox.blur();\r\n    }\r\n  });\r\n};\r\n\r\nconst renderSearchList = () => {\r\n  //fetching Search list from The Movie Database API\r\n  const fetchSearchList = async (queryP) => {\r\n    const response = await fetch(\r\n      `https://api.themoviedb.org/3/search/movie?query=${queryP}&\r\n    include_adult=false&language=en-US&page=1&api_key=${api_key}`\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    return data.results;\r\n  };\r\n\r\n  //Rendering Search list to the DOM\r\n  const renderSearchList = (movies, query) => {\r\n    const filtered = movies.filter((movie) =>\r\n      movie.title.toLowerCase().includes(query)\r\n    );\r\n    filtered.forEach((movie) => {\r\n      const div = document.createElement(\"div\");\r\n\r\n      div.className =\r\n        \"flex flex-row px-3 py-2 hover:bg-gray-700 cursor-pointer\";\r\n\r\n      div.innerHTML = `\r\n     <img\r\n                    src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\"\r\n                    alt=\"demo\"\r\n                    class=\"w-[40px] h-[60px]\"\r\n                  />\r\n                  <div class=\"flex flex-col justify-center\">\r\n                    <div class=\"ml-2 text-[0.8rem]\">${movie.title}</div>\r\n                  </div>`;\r\n\r\n      div.addEventListener(\"click\", () => {\r\n        searchBox.value = movie.title;\r\n        suggestions.classList.add(\"hidden\");\r\n      });\r\n      suggestions.appendChild(div);\r\n      suggestions.classList.toggle(\"hidden\", filtered.length === 0);\r\n    });\r\n  };\r\n\r\n  // Fetching and rendering the Search list\r\n  const fetchAndRenderSearchList = async (query) => {\r\n    try {\r\n      const movies = await fetchSearchList(query);\r\n      console.log(\"Fetched movies:\", movies);\r\n      renderSearchList(movies, query);\r\n    } catch (error) {\r\n      console.error(\"Error fetching movie list:\", error);\r\n      return;\r\n    }\r\n  };\r\n\r\n  searchBox.addEventListener(\"input\", () => {\r\n    const query = searchBox.value.toLowerCase();\r\n    suggestions.innerHTML = \"\";\r\n\r\n    if (query) {\r\n      fetchAndRenderSearchList(query);\r\n    } else {\r\n      suggestions.classList.add(\"hidden\");\r\n    }\r\n  });\r\n\r\n  document.addEventListener(\"click\", (event) => {\r\n    if (\r\n      !event.target.closest(\"#searchBox\") &&\r\n      !event.target.closest(\"#suggestions\")\r\n    ) {\r\n      suggestions.classList.add(\"hidden\");\r\n    }\r\n  });\r\n};\r\n\r\nexport { searchEventListners };\r\nexport { renderSearchList };\r\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$e73bf42412feb220$export$40a84a0cda5221f3","$euFvE","$e73bf42412feb220$var$movieListContainer","document","querySelector","searchEventListners","renderSearchList","$e73bf42412feb220$var$fetchMovieList","response","fetch","ok","status","data","json","results","movieElement","toggleBtn","shortText","fullText","addEventListener","classList","contains","add","remove","textContent","$e73bf42412feb220$var$fetchAndRenderMovieList","movies","console","log","forEach","movie","createElement","className","isFavourite","currentFavourites","JSON","parse","localStorage","getItem","some","m","shortOverview","overview","length","slice","innerHTML","poster_path","title","appendChild","$e73bf42412feb220$var$saveMovieToLocalStorage","favIcon","filter","setAttribute","push","count","setItem","stringify","notesIcon","dialogOverlay","noteText","saveBtn","closeBtn","storageKey","savedNotes","existingNote","find","value","content","onclick","filtered","trim","target","error","$a8d410f20eeaeb6d$export$fc720ab599c28b2f","$a8d410f20eeaeb6d$export$e3eeb24f85ee68d","$a8d410f20eeaeb6d$var$searchBtn","getElementById","$a8d410f20eeaeb6d$var$searchBox","$a8d410f20eeaeb6d$var$suggestions","stopPropagation","focus","searchWrapper","blur","fetchSearchList","queryP","fetchAndRenderSearchList","query","toLowerCase","includes","div","toggle","event","closest"],"version":3,"file":"movie-diary-copy.2207ed5d.js.map"}